freeze_date = Date.parse("yyyy-MM-dd hh:mm:ss", "2014-05-08 18:00:00");

def jobs = Hudson.instance.getView("Mathematica").getView("Development").getView("Layout").getView("Layout.Secured.Common").getItems();
def all_jobs = [];
def systems = ["Linux","Linux-x86-64","MacOSX-x86-64","Windows","Windows-x86-64"]

for (job in jobs){
  if (job.name.startsWith("Component")){
    all_jobs.add(job);
  }
  for (system in systems){
    jerb = Hudson.instance.getItems().find{ it.name == (job.name + "." + system) };
    if (jerb != null) all_jobs.add(jerb);
  }
}

build_description = "V10_0_0_12";

// Remove previous freeze tags of the same number
for (job in all_jobs){
  for (build in job.getBuilds()){
    if (build.getDescription().equals(build_description)){
       build.setDescription("")
       build.keepLog(false)
    }
  }
}

for (job in all_jobs){
    build = job.getLastStableBuild();
    while (build.getTime() > freeze_date){
    	  build = build.getPreviousBuild();
    }
    build.keepLog(true);
    build.setDescription(build_description);
    build.save();
}